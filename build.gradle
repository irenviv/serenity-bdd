repositories {
    jcenter()
    mavenLocal()
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:1.2.2-rc.1")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

dependencies {
    compile 'net.serenity-bdd:serenity-core:1.2.2-rc.1'
    compile 'net.serenity-bdd:serenity-jbehave:1.18.0'
    testCompile('junit:junit:4.12')
    compile('org.assertj:assertj-core:1.7.0')
    compile('com.googlecode.lambdaj:lambdaj:2.3.3')
}


task runFrontendTests(type: Test) {
    apply plugin: 'application'
    apply plugin: 'net.serenity-bdd.aggregator'

//    if (System.getProperty("envName") != null) {
//        systemProperty "envName", System.getProperty("envName")
//    }

    if (System.getProperty("webdriver.driver") != null) {
        systemProperty "webdriver.driver", System.getProperty("webdriver.driver")
    }

    systemProperty "webdriver.chrome.driver", "chromedriver.exe"
    systemProperty "webdriver.ie.driver", "IEDriverServer.exe"
    systemProperty "serenity.take.screenshots", "FOR_FAILURES"
    systemProperty "serenity.logging", "VERBOSE"


//    if (System.getProperty("story") != null) {
//        useJUnit {
//            include System.getProperty("story")
//        }
//    }
}



gradle.startParameter.continueOnFailure = true
